// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class ChangeProfileRequest implements flatbuffers.IUnpackableObject<ChangeProfileRequestT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ChangeProfileRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsChangeProfileRequest(bb:flatbuffers.ByteBuffer, obj?:ChangeProfileRequest):ChangeProfileRequest {
  return (obj || new ChangeProfileRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsChangeProfileRequest(bb:flatbuffers.ByteBuffer, obj?:ChangeProfileRequest):ChangeProfileRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ChangeProfileRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

profileName():string|null
profileName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
profileName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

type():string|null
type(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
type(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startChangeProfileRequest(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addProfileName(builder:flatbuffers.Builder, profileNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, profileNameOffset, 0);
}

static addType(builder:flatbuffers.Builder, typeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, typeOffset, 0);
}

static endChangeProfileRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createChangeProfileRequest(builder:flatbuffers.Builder, profileNameOffset:flatbuffers.Offset, typeOffset:flatbuffers.Offset):flatbuffers.Offset {
  ChangeProfileRequest.startChangeProfileRequest(builder);
  ChangeProfileRequest.addProfileName(builder, profileNameOffset);
  ChangeProfileRequest.addType(builder, typeOffset);
  return ChangeProfileRequest.endChangeProfileRequest(builder);
}

unpack(): ChangeProfileRequestT {
  return new ChangeProfileRequestT(
    this.profileName(),
    this.type()
  );
}


unpackTo(_o: ChangeProfileRequestT): void {
  _o.profileName = this.profileName();
  _o.type = this.type();
}
}

export class ChangeProfileRequestT implements flatbuffers.IGeneratedObject {
constructor(
  public profileName: string|Uint8Array|null = null,
  public type: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const profileName = (this.profileName !== null ? builder.createString(this.profileName!) : 0);
  const type = (this.type !== null ? builder.createString(this.type!) : 0);

  return ChangeProfileRequest.createChangeProfileRequest(builder,
    profileName,
    type
  );
}
}
