// automatically generated by the FlatBuffers compiler, do not modify

package solarxr_protocol.rpc

import java.nio.*
import kotlin.math.sign
import com.google.flatbuffers.*

@Suppress("unused")
class SerialDeviceId : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : SerialDeviceId {
        __init(_i, _bb)
        return this
    }
    val port : String?
        get() {
            val o = __offset(4)
            return if (o != 0) __string(o + bb_pos) else null
        }
    val portAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(4, 1)
    fun portInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 4, 1)
    companion object {
        @JvmStatic
        fun validateVersion() = Constants.FLATBUFFERS_22_10_26()
        @JvmStatic
        fun getRootAsSerialDeviceId(_bb: ByteBuffer): SerialDeviceId = getRootAsSerialDeviceId(_bb, SerialDeviceId())
        @JvmStatic
        fun getRootAsSerialDeviceId(_bb: ByteBuffer, obj: SerialDeviceId): SerialDeviceId {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        @JvmStatic
        fun createSerialDeviceId(builder: FlatBufferBuilder, portOffset: Int) : Int {
            builder.startTable(1)
            addPort(builder, portOffset)
            return endSerialDeviceId(builder)
        }
        @JvmStatic
        fun startSerialDeviceId(builder: FlatBufferBuilder) = builder.startTable(1)
        @JvmStatic
        fun addPort(builder: FlatBufferBuilder, port: Int) = builder.addOffset(0, port, 0)
        @JvmStatic
        fun endSerialDeviceId(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
